alt - d : yabai -m window --toggle zoom-parent
alt - f : yabai -m window --toggle zoom-fullscreen
alt - tab : [ $(yabai -m query --windows --space | jq -re "map(select(.\"has-focus\" == true)) | length != 0") = true ] && yabai -m window --focus "$(yabai -m query --windows --space | jq -re "[sort_by(.id, .frame) | reverse | .[] | select(.role == \"AXWindow\" and .subrole == \"AXStandardWindow\") | .id] | nth(index($(yabai -m query --windows --window | jq -re ".id")) - 1)")" ||  yabai -m window --focus "$(yabai -m query --spaces --space | jq -re ".windows[0]?")" &> /dev/null

# toggle sticky (show on all spaces)
alt - a : yabai -m window --sub-layer above
alt - s : yabai -m window --sub-layer normal

# focus window
hyper - h : yabai -m window --focus west || yabai -m window --focus stack.prev || yabai -m window --focus stack.last
hyper - j : yabai -m window --focus south
hyper - k : yabai -m window --focus north
hyper - l : yabai -m window --focus east || yabai -m window --focus stack.next || yabai -m window --focus stack.first

# swap window
alt + shift - h : yabai -m window --swap west
alt + shift - j : yabai -m window --swap south
alt + shift - k : yabai -m window --swap north
alt + shift - l : yabai -m window --swap east

# move window and split
alt + ctrl - h : yabai -m window --warp west
alt + ctrl - j : yabai -m window --warp south
alt + ctrl - k : yabai -m window --warp north
alt + ctrl - l : yabai -m window --warp east

# move window to space #
alt - 1 : yabai -m window --space 1;
alt - 2 : yabai -m window --space 2;
alt - 3 : yabai -m window --space 3;
alt - 4 : yabai -m window --space 4;
alt - 5 : yabai -m window --space 5;

# rotate layout clockwise
shift + alt - r : yabai -m space --rotate 270

# flip along y-axis
shift + alt - y : yabai -m space --mirror y-axis

# flip along x-axis
shift + alt - x : yabai -m space --mirror x-axis

# toggle window float
alt - t : yabai -m window --toggle float --grid 4:4:1:1:2:2

# floating window fill left-half screen (1/3 screen)
# shift + alt - left : yabai -m window --toggle float --grid 1:3:0:0:1:1
# shift + alt - left : yabai -m window --toggle float --grid 1:4:0:0:1:1

# floating window fill right-half screen (2/3 screen)
# shift + alt - right : yabai -m window --toggle float --grid 1:3:1:0:2:1
# shift + alt - right : yabai -m window --toggle float --grid 1:4:1:0:3:1

# floating window fill left-half screen (2/3 screen)
shift + alt - left : yabai -m window --toggle float --grid 1:4:0:0:3:1

# floating window fill right-half screen (1/3 screen)
shift + alt - right : yabai -m window --toggle float --grid 1:4:3:0:1:1

# toggle topmost (keep above other windows)
alt - o : yabai -m window --toggle topmost

# toggle picture-in-picture
alt - p : yabai -m window --toggle border --toggle pip

# add padding bottom so you can see music player
hyper - 0: yabai -m config external_bar all:0:0 # remove padding
hyper - 9: yabai -m config external_bar all:0:70 # add padding

# -- Modifying Window Size --
#
# increase window size
shift + alt - a : yabai -m window --resize left:-40:0
shift + alt - s : yabai -m window --resize bottom:0:40
shift + alt - w : yabai -m window --resize top:0:-40
shift + alt - d : yabai -m window --resize right:40:0

# decrease window size
shift + cmd - a : yabai -m window --resize left:30:0
shift + cmd - s : yabai -m window --resize bottom:0:-30
shift + cmd - w : yabai -m window --resize top:0:30
shift + cmd - d : yabai -m window --resize right:-30:0

# maximize a window
shift + alt - m : yabai -m window --toggle zoom-fullscreen

# balance out tree of windows (resize to occupy same area)
shift + alt - e : yabai -m space --balance

# focus space
hyper - tab : yabai -m space --focus recent
hyper - q : yabai -m space --focus 1;
hyper - w : yabai -m space --focus 2;
hyper - e : yabai -m space --focus 3;
hyper - d : yabai -m space --focus 4;
hyper - f : yabai -m space --focus 5;

hyper - o : yabai -m window --focus "$(yabai -m query --windows --space | jq -re "[sort_by(.id, .frame) | reverse | .[] | select(.role == \"AXWindow\" and .subrole == \"AXStandardWindow\") | .id] | nth(index($(yabai -m query --windows --window | jq -re ".id")) - 1)")"


# hyper - i : yabai -m space --focus 1 && yabai -m window --focus "$(yabai -m query --windows --space | jq .[0].id)"
# hyper - o : yabai -m space --focus 2 && yabai -m window --focus "$(yabai -m query --windows --space | jq .[0].id)"
# hyper - p : yabai -m space --focus 3 && yabai -m window --focus "$(yabai -m query --windows --space | jq .[0].id)"
# hyper - x : yabai -m space --focus 4 && yabai -m window --focus "$(yabai -m query --windows --space | jq .[0].id)"
# hyper - ] : yabai -m space --focus 5 && yabai -m window --focus "$(yabai -m query --windows --space | jq .[0].id)"


# open terminal, blazingly fast compared to iTerm/Hyper
# cmd - return : /Applications/kitty.app/Contents/MacOS/kitty --single-instance -d ~

# restart Yabai
# hyper - y : yabai --restart-service | yabai -m rule --apply
hyper - y : yabai --restart-service
